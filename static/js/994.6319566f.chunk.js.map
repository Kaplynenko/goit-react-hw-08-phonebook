{"version":3,"file":"static/js/994.6319566f.chunk.js","mappings":"yPACA,EAAuB,2BAAvB,EAA0D,4B,SCM3C,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MAEF,IAAK,QACHR,EAASQ,GACT,MAEF,IAAK,WACHN,EAAYM,GACZ,MAEF,QACE,OAEL,EASKC,EAAQ,WACZX,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,4BACE,+CAEA,UAACQ,EAAA,EAAD,CAAMC,SAjBW,SAAAL,GACnBA,EAAMM,iBACNT,EAASU,EAAAA,EAAAA,SAAwB,CAAEhB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAEhDQ,GACD,EAYiCK,UAAWC,EAAQC,aAAa,MAA9D,WACE,SAACN,EAAA,QAAD,CAAYI,UAAU,OAAOG,UAAU,gBAAvC,UACE,UAACP,EAAA,QAAD,CAAYI,UAAWC,EAAvB,uBAEE,SAACL,EAAA,UAAD,CACEQ,KAAK,OACLrB,KAAK,OACLW,MAAOX,EACPsB,SAAUd,UAKhB,SAACK,EAAA,QAAD,CAAYI,UAAU,OAAOG,UAAU,iBAAvC,UACE,UAACP,EAAA,QAAD,CAAYI,UAAWC,EAAvB,yBAEE,SAACL,EAAA,UAAD,CACEQ,KAAK,QACLrB,KAAK,QACLW,MAAOT,EACPoB,SAAUd,UAKhB,SAACK,EAAA,QAAD,CAAYI,UAAU,OAAOG,UAAU,oBAAvC,UACE,UAACP,EAAA,QAAD,CAAYI,UAAWC,EAAvB,6BAEE,SAACL,EAAA,UAAD,CACEQ,KAAK,WACLrB,KAAK,WACLW,MAAOP,EACPkB,SAAUd,UAKhB,SAACe,EAAA,EAAD,CAAQF,KAAK,SAAb,0BAIP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/Views/Registration/Registration.module.css?adc7","Views/Registration/Registration.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Registration_form__odzlu\",\"label\":\"Registration_label__5fv-D\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport authOperations from '../../redux/auth/authOperations';\nimport s from '../Registration/Registration.module.css';\n\nexport default function Registration() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Registration page</h1>\n\n      <Form onSubmit={handleSubmit} className={s.form} autoComplete=\"off\">\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n          <Form.Label className={s.label}>\n            Your Name\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n            />\n          </Form.Label>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label className={s.label}>\n            Your E-mail\n            <Form.Control\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={handleChange}\n            />\n          </Form.Label>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n          <Form.Label className={s.label}>\n            Create password\n            <Form.Control\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </Form.Label>\n        </Form.Group>\n\n        <Button type=\"submit\">Sign up</Button>\n      </Form>\n    </div>\n  );\n}\n"],"names":["Registration","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","event","target","value","reset","Form","onSubmit","preventDefault","authOperations","className","s","autoComplete","controlId","type","onChange","Button"],"sourceRoot":""}